{"id":"node_modules/monaco-editor/esm/vs/base/common/assert.js","dependencies":[{"name":"/Users/guoyaqi/work/2020/playground/package.json","includedInParent":true,"mtime":1584852685334},{"name":"/Users/guoyaqi/work/2020/playground/node_modules/monaco-editor/package.json","includedInParent":true,"mtime":1584771267802}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ok = ok;\n\n/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\n\n/**\r\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\r\n */\nfunction ok(value, message) {\n  if (!value) {\n    throw new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\n  }\n}"},"sourceMaps":{"js":{"mappings":[{"generated":{"line":8,"column":0},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":1,"column":0}},{"generated":{"line":13,"column":0},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":5,"column":0}},{"generated":{"line":16,"column":0},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":8,"column":7}},{"name":"ok","generated":{"line":16,"column":9},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":8,"column":16}},{"generated":{"line":16,"column":11},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":8,"column":7}},{"name":"value","generated":{"line":16,"column":12},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":8,"column":19}},{"generated":{"line":16,"column":17},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":8,"column":7}},{"name":"message","generated":{"line":16,"column":19},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":8,"column":26}},{"generated":{"line":16,"column":26},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":8,"column":7}},{"generated":{"line":16,"column":28},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":8,"column":35}},{"generated":{"line":17,"column":0},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":9,"column":4}},{"generated":{"line":17,"column":6},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":9,"column":8}},{"name":"value","generated":{"line":17,"column":7},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":9,"column":9}},{"generated":{"line":17,"column":12},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":9,"column":4}},{"generated":{"line":17,"column":14},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":9,"column":16}},{"generated":{"line":18,"column":0},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":8}},{"generated":{"line":18,"column":10},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":14}},{"name":"Error","generated":{"line":18,"column":14},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":18}},{"generated":{"line":18,"column":19},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":14}},{"name":"message","generated":{"line":18,"column":20},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":24}},{"generated":{"line":18,"column":27},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":31}},{"generated":{"line":18,"column":30},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":34}},{"name":"message","generated":{"line":18,"column":53},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":57}},{"generated":{"line":18,"column":60},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":34}},{"generated":{"line":18,"column":63},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":67}},{"generated":{"line":18,"column":66},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":31}},{"generated":{"line":18,"column":69},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":73}},{"generated":{"line":18,"column":87},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":14}},{"generated":{"line":18,"column":88},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":10,"column":8}},{"generated":{"line":19,"column":0},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":11,"column":5}},{"generated":{"line":20,"column":0},"source":"node_modules/monaco-editor/esm/vs/base/common/assert.js","original":{"line":12,"column":1}}],"sources":{"node_modules/monaco-editor/esm/vs/base/common/assert.js":"/*---------------------------------------------------------------------------------------------\r\n *  Copyright (c) Microsoft Corporation. All rights reserved.\r\n *  Licensed under the MIT License. See License.txt in the project root for license information.\r\n *--------------------------------------------------------------------------------------------*/\r\n/**\r\n * Throws an error with the provided message if the provided value does not evaluate to a true Javascript value.\r\n */\r\nexport function ok(value, message) {\r\n    if (!value) {\r\n        throw new Error(message ? 'Assertion failed (' + message + ')' : 'Assertion Failed');\r\n    }\r\n}\r\n"},"lineCount":null}},"error":null,"hash":"5c46d7e2dbbe1b689b7c1fa601ba56c1","cacheData":{"env":{}}}